version: '3.8'
services:
  db:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    networks:
      - concert-network
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: application
      MYSQL_PASSWORD: application
      MYSQL_DATABASE: concert
    volumes:
      - ./data/mysql/:/var/lib/mysql

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - concert-network
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/data

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    networks:
      - concert-network
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    networks:
      - concert-network
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    networks:
      - concert-network
    ports:
      - "8989:8080"
    restart: always
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

networks:
  concert-network:
    driver: bridge